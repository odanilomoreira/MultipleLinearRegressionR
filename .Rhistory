print("Hello World")
setwd("C:/Users/Isabela/Desktop/Machine Learning A-Z/Part 2 - Regression/Section 5 - Multiple Linear Regression")
dataset = read.csv('50_Startups.csv')
View(dataset)
View(dataset)
View(dataset)
dataset$State = factor(dataset$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1, 2, 3))
View(dataset)
set.seed(123)
split = sample.split(dataset$Profit, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
library(caTools)
set.seed(123)
split = sample.split(dataset$Profit, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(dataset)
View(test_set)
View(training_set)
View(dataset)
View(dataset)
regressor = lm(formula = Profit ~ .,
data = training_set)
summary(regressor)
y_pred = predict(regressor, newdata = test_set)
y_pred
regressor = lm(formula = Profit ~ R.D.Spend,
data = training_set)
y_pred = predict(regressor, newdata = test_set)
y_pred
View(test_set)
regressor = lm(formula = Profit ~ .,
data = training_set)
y_pred = predict(regressor, newdata = test_set)
y_pred
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend + Marketing.Spend,
data = training_set)
y_pred = predict(regressor, newdata = test_set)
y_pred
View(test_set)
regressor = lm(formula = Profit ~ R.D.Spend*0.8 + Marketing.Spend*0.2,
data = training_set)
regressor = lm(formula = Profit ~ R.D.Spend + Marketing.Spend/10,
data = training_set)
regressor = lm(formula = Profit ~ R.D.Spend + Marketing.Spend,
data = training_set, weights = v[8,2])
v = array()
v
v = {8,2}
v = 8
v = 2
v
v[1] = 8
v[2] = 2
v
regressor = lm(formula = Profit ~ R.D.Spend + Marketing.Spend,
data = training_set, weights = v)
View(dataset)
regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend + State2 + State3,
data = training_set)
regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend + State,
data = training_set)
regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend + State,
data = dataset)
summary(regressor)
